initSidebarItems({"enum":[["Engine","The WebAssembly edngine to use when running a Rune."],["ErrorKind",""]],"fn":[["rune_error_free","Free an error once you are done with it."],["rune_error_kind","Programmatically find out what kind of error this is."],["rune_error_new","Create a new `Error` with the provided error message."],["rune_error_to_string","Get a simple, oneline message describing the error."],["rune_error_to_string_verbose","Print the error, plus any errors that may have caused it."],["rune_input_tensor_count",""],["rune_input_tensors_free",""],["rune_input_tensors_get",""],["rune_input_tensors_insert","Add a new tensor to this set of input tensors, returning a pointer to the newly created tensor."],["rune_metadata_free","Free a `Metadata` when you are done with it."],["rune_metadata_get_node","Get metadata for a specific node, returning `null` if the node doesn’t exist."],["rune_metadata_node_count","How many nodes does this set of `Metadata` contain?"],["rune_node_argument_count","How many arguments have been passed to this node?"],["rune_node_get_argument_name","Get the name for a particular argument, or `null` if that argument doesn’t exist."],["rune_node_get_argument_value","Get the value for a particular argument, or `null` if that argument doesn’t exist."],["rune_node_id","Get the ID for this particular node."],["rune_node_kind","Which kind of node is this?"],["rune_output_tensor_as_fixed","Get a reference to the underlying `Tensor` if this output tensor has a fixed size."],["rune_output_tensor_as_string_tensor",""],["rune_output_tensors_free",""],["rune_output_tensors_next","Ask the `OutputTensors` iterator for the next `OutputTensor` and the ID of the node it came from."],["rune_runtime_free",""],["rune_runtime_input_tensors",""],["rune_runtime_inputs","Get a set of all the input nodes in this Rune."],["rune_runtime_load",""],["rune_runtime_output_tensors","Get a reference to the tensors associated with each output node."],["rune_runtime_outputs","Get a set of all the output nodes in this Rune."],["rune_runtime_predict","Execute the rune, reading from the input tensors that were provided and writing to the output tensors."],["rune_runtime_set_logger",""],["rune_string_tensor_dimensions","Get a pointer to this `StringTensor`’s dimensions."],["rune_string_tensor_free",""],["rune_string_tensor_get_by_index","Get a pointer to the string at a specific index in the `StringTensor`’s backing array, returning its length in bytes and setting `string_out` if that string exists."],["rune_string_tensor_rank","Get the number of dimensions in this `StringTensor`."],["rune_tensor_buffer",""],["rune_tensor_buffer_len",""],["rune_tensor_buffer_readonly","Get a readonly reference to this `Tensor`’s buffer."],["rune_tensor_dimensions",""],["rune_tensor_element_type",""],["rune_tensor_rank",""]],"struct":[["Config","Data used when loading a Rune."],["Error","An error that may be returned by the Rune native library."],["InputTensors","A dictionary mapping input node IDs to the tensor that will be passed into the Rune."],["Metadata","Metadata for a set of nodes in the ML pipeline."],["Node","Metadata for a single node."],["OutputTensors","An iterator over each of the tensors returned by the Rune."],["Runtime","A loaded Rune."],["StringTensor","A wrapper around a tensor containing dynamically sized elements (i.e. strings)."]],"type":[["Logger",""]]});